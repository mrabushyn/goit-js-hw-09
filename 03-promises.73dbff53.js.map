{"mappings":"AAOA,MAAMA,EAAaC,SAASC,cAAc,qBACpCC,EAAYF,SAASC,cAAc,oBACnCE,EAASH,SAASC,cAAc,sBAIhCG,EAAmBJ,SAASC,cAAc,uBAgBhD,SAASI,EAASC,GAChBC,QAAQC,IAAIF,GAGd,SAASG,EAAQC,GACfH,QAAQC,IAAI,SACZD,QAAQC,IAAIE,GArBdH,QAAQC,IAAIJ,GAwBZA,EAAiBO,iBAAiB,UAElC,SAAkBC,GAGhBA,EAAIC,iBACNN,QAAQC,IAAII,GACSb,EAAWe,YAAcZ,EAAUY,YAAeX,EAAOW,YAC5EP,QAAQC,IAAIT,EAAWe,aAEvB,MAAMC,EAAaC,aAAY,KAhCjC,IAAuBC,EAAUC,GAAVD,EAiCL,EAjCeC,EAiCZnB,EAhCZ,IAAIoB,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAyB,UAAGH,KAE5BI,EAAO,YAERH,OAwB0BQ,KAAKrB,GAAUsB,MAAMlB,KACjDP,GAEH0B,cAAcb","sources":["src/js/03-promises.js"],"sourcesContent":["\n\n// console.log(amount);\n\n\n\n\nconst firstDelay = document.querySelector(\"input[name=delay]\")\nconst delayStep = document.querySelector('input[name=step]');\nconst amount = document.querySelector('input[name=amount]');\n\n\n\nconst BtnCreatePromise = document.querySelector('button[type=submit]');\nconsole.log(BtnCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('esssss' + \" \" + `${position}`);\n      } else {\n        reject('nooooo');\n      }\n    }, delay);\n  });\n}\n\nfunction onSecces(result) {\n  console.log(result);\n}\n\nfunction onError(error) {\n  console.log(\"error\");\n  console.log(error);\n}\n\nBtnCreatePromise.addEventListener(\"submit\", onSubmit)\n\nfunction onSubmit(evt) {\n  \n\n  evt.preventDefault();\nconsole.log(evt);\n  const totalTime = (firstDelay.textContent + delayStep.textContent) * amount.textContent\n  console.log(firstDelay.textContent);\n\n  const intervalId = setInterval(() => {\n    createPromise(2, firstDelay).then(onSecces).catch(onError);\n  }, delayStep);\n\n  clearInterval(intervalId);\n}\n\n\n\n\n\n// if (amount > 4) {\n\n// }\n\n\n\n\n\n\n\n\n// const fetchUserFromServer = username => {\n//   return new Promise((resolve, reject) => {\n//     console.log(`Fetching data for ${username}`);\n\n//     setTimeout(() => {\n//       // Change value of isSuccess variable to simulate request status\n//       const isSuccess = false;\n\n//       if (isSuccess) {\n//         resolve('success value');\n//       } else {\n//         reject('Errrrror');\n//       }\n//     }, 2000);\n//   });\n// };\n//     console.log(Promise);\n\n// fetchUserFromServer('Mango')\n//   .then(o => console.log(o))\n//   .catch(er => console.log(er));\n\n// function onSecces (result) {\n// console.log(\"Allright\")\n// }\n\n// function onError (error) {\n//   console.log(\"Error\")\n// }\n\n// const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise('promiseA value', 3000);\n// const promiseB = makePromise('promiseB value', 3000);\n\n// Promise.race([promiseA, promiseB])\n//   .then(value => console.log(value)) // \"promiseA value\"\n//   .catch(error => console.log(error));\n"],"names":["$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$BtnCreatePromise","$47d4ff9957288465$var$onSecces","result","console","log","$47d4ff9957288465$var$onError","error","addEventListener","evt","preventDefault","textContent","intervalId","setInterval","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","then","catch","clearInterval"],"version":3,"file":"03-promises.73dbff53.js.map"}